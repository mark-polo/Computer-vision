import cv2 as cv

cap = cv.VideoCapture(0)

cap.set(3, 640) # w
cap.set(4, 480) # h

classnames = []

coco = "coco.names"
with open(coco, 'rt') as f:
   classNames = f.read().rstrip('\n').split('\n')

configPath = "ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt"

weightPath = "frozen_inference_graph.pb" 

model = cv.dnn_DetectionModel(weightPath, configPath)
model.setInputSize(320, 320)
model.setInputScale(1.0/ 127.5)
model.setInputMean((127.5, 127.5, 127.5))
model.setInputSwapRB(True)

while True:  
   _, img = cap.read()  
   classIds, confs, bbox = model.detect(img, confThreshold=0.5)
   print(classIds, bbox)
  
   if len(classIds) != 0:   
       for classId, confidence, box in zip(classIds.flatten(), confs.flatten(), bbox):
           cv.rectangle(img, box, color=(0, 255, 0), thickness=2)
           cv.putText(img, classNames[classId-1].upper(), (box[0]+10, box[1]+30), cv.FONT_HERSHEY_COMPLEX, 1, (0,255,0), 2)
 
   cv.imshow('output', img)
   if cv.waitKey(1) & 0xFF == ord('q'):
    break
    
cap.release()
cv.destroyAllWindows()